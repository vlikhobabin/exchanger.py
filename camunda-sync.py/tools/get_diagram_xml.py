#!/usr/bin/env python3
"""
üì• StormBPMN XML Downloader - –ó–∞–≥—Ä—É–∑–∫–∞ BPMN –¥–∏–∞–≥—Ä–∞–º–º –∏–∑ StormBPMN

–ù–ê–ó–ù–ê–ß–ï–ù–ò–ï:
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç BPMN –¥–∏–∞–≥—Ä–∞–º–º—É –≤ XML —Ñ–æ—Ä–º–∞—Ç–µ –ø–æ ID –∏–∑ StormBPMN –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ.
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ XML –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã (id, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Å—Ç–∞—Ç—É—Å, –∞–≤—Ç–æ—Ä –∏ –¥—Ä.)
    —á–µ—Ä–µ–∑ extensionElements —Å custom namespace. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç 
    —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø—Ä–æ—Ü–µ—Å—Å–æ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ Camunda.
    –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏–∑ StormBPMN —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    python get_diagram_xml.py <diagram_id>

–ü–†–ò–ú–ï–†–´:
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∏–∞–≥—Ä–∞–º–º—É –ø–æ ID
    python get_diagram_xml.py 9d5687e5-6108-4f05-b46a-2d24b120ba9d
    
    # –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∏–∞–≥—Ä–∞–º–º (bash/cmd)
    for id in abc123 def456 ghi789; do python get_diagram_xml.py $id; done

–†–ï–ó–£–õ–¨–¢–ê–¢:
    –°–æ–∑–¥–∞—é—Ç—Å—è –¥–≤–∞ —Ñ–∞–π–ª–∞ –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞:
    1. <diagram_name>.bpmn - BPMN –¥–∏–∞–≥—Ä–∞–º–º–∞ –≤ XML —Ñ–æ—Ä–º–∞—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ (–≥–æ—Ç–æ–≤–∞ –¥–ª—è convert.py)
    2. <diagram_name>_assignees.json - —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è convert.py)

–§–û–†–ú–ê–¢ –ú–ï–¢–ê–î–ê–ù–ù–´–•:
    –í –∫–æ—Ä–µ–Ω—å <bpmn:definitions> –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–ª–æ–∫:
    <bpmn:extensionElements>
        <custom:diagram>
            <custom:id>–¥–∏–∞–≥—Ä–∞–º–º–∞_id</custom:id>
            <custom:name>–Ω–∞–∑–≤–∞–Ω–∏–µ_–¥–∏–∞–≥—Ä–∞–º–º—ã</custom:name>
            <custom:status>—Å—Ç–∞—Ç—É—Å</custom:status>
            <custom:authorUsername>–∞–≤—Ç–æ—Ä</custom:authorUsername>
            <custom:processedOn>2024-01-15T10:30:00</custom:processedOn>
            ... (–≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è –∏–∑ StormBPMN API)
        </custom:diagram>
    </bpmn:extensionElements>

–ü–†–ò–ú–ï–† –†–ï–ó–£–õ–¨–¢–ê–¢–ê:
    ‚úÖ XML —Å—Ö–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: –ü—Ä–æ—Ü–µ—Å—Å_—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è.bpmn
    üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º—ã...
    ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã: 18 –ø–æ–ª–µ–π
    ‚úÖ –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: –ü—Ä–æ—Ü–µ—Å—Å_—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è_assignees.json
    üìä –ü–æ–ª—É—á–µ–Ω–æ 15 –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö
    
    üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ö–µ–º–µ:
       - –ù–∞–∑–≤–∞–Ω–∏–µ: –ü—Ä–æ—Ü–µ—Å—Å —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
       - ID: 9d5687e5-6108-4f05-b46a-2d24b120ba9d
       - –°—Ç–∞—Ç—É—Å: ACTIVE
       - –ê–≤—Ç–æ—Ä: user.admin
       - –†–∞–∑–º–µ—Ä XML: 125,847 —Å–∏–º–≤–æ–ª–æ–≤

–û–°–û–ë–ï–ù–ù–û–°–¢–ò:
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (200 —Å–∏–º–≤–æ–ª–æ–≤)
    - –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫–µ
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º—ã –≤ BPMN XML —á–µ—Ä–µ–∑ extensionElements
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ custom namespace (xmlns:custom="http://eg-holding.ru/bpmn/custom")
    - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
    - Python 3.6+
    - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ loguru (pip install loguru)
    - –ú–æ–¥—É–ª—å stormbpmn_client.py –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–ø–∫–µ
    - –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è:
      * STORMBPMN_BEARER_TOKEN - —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è StormBPMN API

–ù–ê–°–¢–†–û–ô–ö–ê:
    1. –ü–æ–ª—É—á–∏—Ç–µ Bearer Token –∏–∑ StormBPMN
    2. –î–æ–±–∞–≤—å—Ç–µ STORMBPMN_BEARER_TOKEN –≤ .env —Ñ–∞–π–ª
    3. –ù–∞–π–¥–∏—Ç–µ ID –¥–∏–∞–≥—Ä–∞–º–º—ã —Å –ø–æ–º–æ—â—å—é get_diagrams_list.py

–¢–ò–ü–ò–ß–ù–´–ô WORKFLOW:
    1. python get_diagrams_list.py > list.json  # –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–≥—Ä–∞–º–º
    2. python get_diagram_xml.py <diagram_id>   # —Å–∫–∞—á–∞—Ç—å –Ω—É–∂–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    3. python convert.py <diagram_name>.bpmn    # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è Camunda
    4. python deploy.py camunda_<diagram_name>.bpmn  # —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Camunda

–ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:
    - –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ–∞–π–ª—ã)
    - –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –∏–º–µ–Ω–∞—Ö —Ñ–∞–π–ª–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ '_'
    - –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è
"""
import json
import sys
import os
import re
from pathlib import Path
from loguru import logger
import xml.etree.ElementTree as ET
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from stormbpmn_client import StormBPMNClient, StormBPMNAuthError, StormBPMNNotFoundError
from tools.logging_utils import setup_tool_logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–∫–æ–Ω—Å–æ–ª—å + —Ñ–∞–π–ª—ã)
setup_tool_logging("get_diagram_xml")

def sanitize_filename(filename: str) -> str:
    """–û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    # –£–¥–∞–ª—è–µ–º –∏–ª–∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    sanitized = re.sub(r'[<>:"/\\|?*]', '_', filename)
    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ —Ç–æ—á–∫–∏ –≤ –∫–æ–Ω—Ü–µ
    sanitized = sanitized.strip('. ')
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
    if len(sanitized) > 200:
        sanitized = sanitized[:200]
    return sanitized

def add_diagram_metadata(xml_file_path: Path, diagram_data: dict) -> None:
    """
    –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –≤ BPMN XML —Ñ–∞–π–ª
    
    Args:
        xml_file_path: –ü—É—Ç—å –∫ XML —Ñ–∞–π–ª—É –¥–∏–∞–≥—Ä–∞–º–º—ã
        diagram_data: –î–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –∏–∑ API StormBPMN
    """
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º namespaces –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
        ET.register_namespace('', 'http://www.omg.org/spec/BPMN/20100524/MODEL')
        ET.register_namespace('bpmn', 'http://www.omg.org/spec/BPMN/20100524/MODEL')
        ET.register_namespace('bpmndi', 'http://www.omg.org/spec/BPMN/20100524/DI')
        ET.register_namespace('dc', 'http://www.omg.org/spec/DD/20100524/DC')
        ET.register_namespace('di', 'http://www.omg.org/spec/DD/20100524/DI')
        ET.register_namespace('custom', 'http://eg-holding.ru/bpmn/custom')
        
        # –ü–∞—Ä—Å–∏–º XML —Ñ–∞–π–ª
        tree = ET.parse(xml_file_path)
        root = tree.getroot()
        
        logger.debug(f"–ü–∞—Ä—Å–∏–Ω–≥ XML —Ñ–∞–π–ª–∞: {xml_file_path}")
        
        # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç definitions (–∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç)
        definitions = root
        if definitions.tag.endswith('}definitions'):
            # –î–æ–±–∞–≤–ª—è–µ–º custom namespace –≤ –∞—Ç—Ä–∏–±—É—Ç—ã definitions
            definitions.set('xmlns:custom', 'http://eg-holding.ru/bpmn/custom')
            logger.debug("–î–æ–±–∞–≤–ª–µ–Ω custom namespace –≤ definitions")
        else:
            logger.error(f"–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç definitions. –ù–∞–π–¥–µ–Ω: {definitions.tag}")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ extensionElements –≤ definitions
        extension_elements = None
        for child in definitions:
            if child.tag.endswith('}extensionElements'):
                extension_elements = child
                logger.debug("–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π extensionElements")
                break
        
        # –ï—Å–ª–∏ extensionElements –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        if extension_elements is None:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º namespace –¥–ª—è BPMN —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            bpmn_ns = ''
            if definitions.tag.startswith('{'):
                bpmn_ns = definitions.tag.split('}')[0] + '}'
            
            extension_elements = ET.Element(f'{bpmn_ns}extensionElements')
            # –í—Å—Ç–∞–≤–ª—è–µ–º extensionElements –≤ –Ω–∞—á–∞–ª–æ definitions (–ø–æ—Å–ª–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤)
            definitions.insert(0, extension_elements)
            logger.debug("–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π extensionElements")
        
        # –°–æ–∑–¥–∞–µ–º custom:diagram —ç–ª–µ–º–µ–Ω—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        custom_diagram = ET.SubElement(extension_elements, 'custom:diagram')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ diagram_data
        metadata_fields = [
            'id', 'createdOn', 'updatedOn', 'updateBy', 'userFolderName', 'teamFolderName',
            'userFolderId', 'teamFolderId', 'favoritesCount', 'favored', 'name', 'status',
            'authorUsername', 'you', 'versionNumber', 'description', 'public', 'type',
            'tags', 'totalApprovals', 'trueApprovals', 'falseApprovals', 'outcommingLinks',
            'incommingLinks', 'autosaveIndex', 'processType', 'linkedDiagramId',
            'linkedDiagramName', 'teamId'
        ]
        
        added_count = 0
        for field in metadata_fields:
            value = diagram_data.get(field)
            if value is not None:
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É
                if isinstance(value, bool):
                    str_value = str(value).lower()
                elif isinstance(value, (int, float)):
                    str_value = str(value)
                else:
                    str_value = str(value) if value else ''
                
                # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
                if str_value:
                    element = ET.SubElement(custom_diagram, f'custom:{field}')
                    element.text = str_value
                    added_count += 1
        
        # –î–æ–±–∞–≤–ª—è–µ–º timestamp –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processed_element = ET.SubElement(custom_diagram, 'custom:processedOn')
        processed_element.text = datetime.now().isoformat()
        added_count += 1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π XML
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ write —Å xml_declaration –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ UTF-8 –≤—ã–≤–æ–¥–∞
        tree.write(xml_file_path, encoding='utf-8', xml_declaration=True)
        
        logger.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã: {added_count} –ø–æ–ª–µ–π")
        logger.debug(f"–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª: {xml_file_path}")
        
    except ET.ParseError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ XML: {e}")
        raise
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö: {e}")
        raise

def save_diagram_xml(diagram_id: str) -> None:
    """–ü–æ–ª—É—á–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å XML —Å—Ö–µ–º—ã –ø–æ ID"""
    
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
        client = StormBPMNClient()
        logger.info(f"StormBPMN Client —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ö–µ–º—ã
        logger.info(f"–ó–∞–ø—Ä–æ—Å —Å—Ö–µ–º—ã —Å ID: {diagram_id}")
        result = client.get_diagram_by_id(diagram_id)
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        diagram = result.get('diagram', {})
        if not diagram:
            logger.error("–î–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ")
            sys.exit(1)
        
        diagram_name = diagram.get('name', 'diagram')
        diagram_body = diagram.get('body', '')
        
        if not diagram_body:
            logger.error("XML –¥–∞–Ω–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            sys.exit(1)
        
        # –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        safe_filename = sanitize_filename(diagram_name)
        filename = f"{safe_filename}.bpmn"
        
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ (–Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ –æ—Ç camunda-sync.py)
        root_path = Path(__file__).parent.parent.parent
        file_path = root_path / filename
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ XML —Ñ–∞–π–ª–∞
        try:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(diagram_body)
            
            logger.info(f"‚úÖ XML —Å—Ö–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: {file_path}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ XML —Ñ–∞–π–ª–∞: {e}")
            sys.exit(1)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º—ã –≤ XML
        logger.info(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–∏–∞–≥—Ä–∞–º–º—ã...")
        try:
            add_diagram_metadata(file_path, diagram)
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {e}")
            logger.info("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö
        logger.info(f"üìã –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö...")
        try:
            assignees = client.get_diagram_assignees(diagram_id)
            
            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON —Ñ–∞–π–ª–∞ —Å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º–∏
            assignees_filename = f"{safe_filename}_assignees.json"
            assignees_file_path = root_path / assignees_filename
            
            with open(assignees_file_path, 'w', encoding='utf-8') as f:
                json.dump(assignees, f, ensure_ascii=False, indent=2)
            
            logger.info(f"‚úÖ –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {assignees_file_path}")
            logger.info(f"üìä –ü–æ–ª—É—á–µ–Ω–æ {len(assignees)} –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö")
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö: {e}")
            logger.info("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö...")
        
        # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        logger.info(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ö–µ–º–µ:")
        logger.info(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {diagram_name}")
        logger.info(f"   - ID: {diagram.get('id', 'N/A')}")
        logger.info(f"   - –°—Ç–∞—Ç—É—Å: {diagram.get('status', 'N/A')}")
        logger.info(f"   - –¢–∏–ø: {diagram.get('type', 'N/A')}")
        logger.info(f"   - –ê–≤—Ç–æ—Ä: {diagram.get('authorUsername', 'N/A')}")
        logger.info(f"   - –†–∞–∑–º–µ—Ä XML: {len(diagram_body)} —Å–∏–º–≤–æ–ª–æ–≤")
        
    except StormBPMNNotFoundError:
        logger.error(f"‚ùå –°—Ö–µ–º–∞ —Å ID '{diagram_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        sys.exit(1)
    except StormBPMNAuthError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        logger.error("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ STORMBPMN_BEARER_TOKEN")
        sys.exit(1)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if len(sys.argv) != 2:
        logger.error("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python get_diagram_xml.py <diagram_id>")
        logger.error("–ü—Ä–∏–º–µ—Ä: python get_diagram_xml.py 9d5687e5-6108-4f05-b46a-2d24b120ba9d")
        sys.exit(1)
    
    diagram_id = sys.argv[1].strip()
    
    if not diagram_id:
        logger.error("ID –¥–∏–∞–≥—Ä–∞–º–º—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        sys.exit(1)
    
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É XML —Å—Ö–µ–º—ã...")
    save_diagram_xml(diagram_id)

if __name__ == "__main__":
    main() 