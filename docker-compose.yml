version: '3.8'

services:
  # Universal Worker - Camunda to RabbitMQ integration
  universal-worker:
    build:
      context: .
      dockerfile: Dockerfile.universal-worker
    container_name: exchanger-universal-worker
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./universal-worker.py/logs:/app/universal-worker.py/logs
    depends_on:
      - rabbitmq
    restart: unless-stopped
    networks:
      - exchanger-network

  # Task Creator - RabbitMQ to External Systems integration  
  task-creator:
    build:
      context: .
      dockerfile: Dockerfile.task-creator
    container_name: exchanger-task-creator
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./task-creator.py/logs:/app/task-creator.py/logs
    depends_on:
      - rabbitmq
      - universal-worker
    restart: unless-stopped
    networks:
      - exchanger-network

  # RabbitMQ Server (optional - can use external)
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: exchanger-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - exchanger-network
    restart: unless-stopped

  # Monitoring (optional)
  monitoring:
    image: nginx:alpine
    container_name: exchanger-monitoring
    ports:
      - "8080:80"
    volumes:
      - ./monitoring:/usr/share/nginx/html:ro
    networks:
      - exchanger-network
    restart: unless-stopped

volumes:
  rabbitmq_data:

networks:
  exchanger-network:
    driver: bridge 