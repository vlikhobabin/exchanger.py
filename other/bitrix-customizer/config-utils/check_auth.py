#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import json
import shutil
import subprocess
import sys
from pathlib import Path

def check_tool(tool_name, description):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞"""
    tool_path = shutil.which(tool_name)
    if tool_path:
        print(f"‚úÖ {description}: {tool_path}")
        return True
    else:
        print(f"‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def check_ssh_tools():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å SSH –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:")
    print("-" * 40)
    
    tools = [
        ('ssh', 'SSH –∫–ª–∏–µ–Ω—Ç'),
        ('scp', 'SCP (–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ)'),
        ('pscp', 'PSCP (PuTTY –≤–µ—Ä—Å–∏—è SCP)'),
        ('puttygen', 'PuTTY –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–ª—é—á–µ–π'),
        ('plink', 'PuTTY SSH –∫–ª–∏–µ–Ω—Ç')
    ]
    
    available = {}
    for tool, desc in tools:
        available[tool] = check_tool(tool, desc)
    
    return available

def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("-" * 40)
    
    config_path = Path(__file__).parent.parent / "config.json"
    if not config_path.exists():
        print("‚ùå –§–∞–π–ª config.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
        
        server_config = config.get('server', {})
        auth_method = server_config.get('auth_method', 'password')
        
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        print(f"   –°–µ—Ä–≤–µ—Ä: {server_config.get('user')}@{server_config.get('host')}")
        print(f"   –ú–µ—Ç–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {auth_method}")
        
        if auth_method == 'key':
            key_file = server_config.get('key_file')
            if key_file:
                # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
                import os
                if os.path.isabs(key_file):
                    key_path = Path(key_file)
                else:
                    key_path = Path(__file__).parent / key_file
                
                if key_path.exists():
                    print(f"‚úÖ –§–∞–π–ª –∫–ª—é—á–∞: {key_file}")
                    print(f"   –ü—É—Ç—å: {key_path}")
                    print(f"   –†–∞–∑–º–µ—Ä: {key_path.stat().st_size} –±–∞–π—Ç")
                else:
                    print(f"‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file}")
            else:
                print("‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        
        return config
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return None

def test_connection(config):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
    print("-" * 40)
    
    if not config:
        print("‚ùå –ù–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    server_config = config.get('server', {})
    auth_method = server_config.get('auth_method', 'password')
    
    if auth_method == 'key':
        key_file = server_config.get('key_file')
        if not key_file:
            print("‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ —É–∫–∞–∑–∞–Ω")
            return False
        
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
        import os
        if os.path.isabs(key_file):
            key_path = Path(key_file)
        else:
            key_path = Path(__file__).parent / key_file
        
        if not key_path.exists():
            print(f"‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file}")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ plink
        if shutil.which('plink'):
            cmd = [
                'plink',
                '-i', str(key_path),
                '-batch',
                f"{server_config['user']}@{server_config['host']}",
                'echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"'
            ]
        else:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ssh
            if key_path.suffix.lower() == '.ppk':
                print("‚ùå .ppk –∫–ª—é—á —Ç—Ä–µ–±—É–µ—Ç PuTTY —É—Ç–∏–ª–∏—Ç—ã (plink) –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            cmd = [
                'ssh',
                '-i', str(key_path),
                '-o', 'StrictHostKeyChecking=no',
                '-o', 'ConnectTimeout=10',
                f"{server_config['user']}@{server_config['host']}",
                'echo "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"'
            ]
    else:
        print("‚ÑπÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
        return False
    
    try:
        print(f"üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ {server_config['user']}@{server_config['host']}...")
        result = subprocess.run(cmd, check=True, capture_output=True, text=True, timeout=30)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {result.stdout.strip()}")
        return True
    except subprocess.TimeoutExpired:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        return False
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        if e.stderr:
            print(f"   –î–µ—Ç–∞–ª–∏: {e.stderr}")
        return False
    except FileNotFoundError:
        print("‚ùå SSH –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def suggest_fixes(available_tools, config):
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"""
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("-" * 40)
    
    if not config:
        print("1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª config.json —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
        return
    
    server_config = config.get('server', {})
    auth_method = server_config.get('auth_method', 'password')
    
    if auth_method == 'key':
        key_file = server_config.get('key_file', '')
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–∞–∫ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
        import os
        if os.path.isabs(key_file):
            key_path = Path(key_file)
        else:
            key_path = Path(__file__).parent / key_file
        
        if not key_path.exists():
            if os.path.isabs(key_file):
                print(f"1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –∫–ª—é—á–∞ –ø–æ –ø—É—Ç–∏: {key_file}")
            else:
                print(f"1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª –∫–ª—é—á–∞ {key_file} –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞")
        
        if key_file.endswith('.ppk'):
            if not available_tools.get('pscp'):
                print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PuTTY –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å .ppk –∫–ª—é—á–∞–º–∏:")
                print("   - –ß–µ—Ä–µ–∑ chocolatey: choco install putty")
                print("   - –ò–ª–∏ —Å–∫–∞—á–∞–π—Ç–µ —Å https://putty.org/")
            
            if not available_tools.get('puttygen'):
                print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ puttygen –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∫–ª—é—á–µ–π")
        
        if not available_tools.get('scp') and not available_tools.get('pscp'):
            print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSH –∫–ª–∏–µ–Ω—Ç:")
            print("   - Git for Windows (–≤–∫–ª—é—á–∞–µ—Ç SSH)")
            print("   - OpenSSH –¥–ª—è Windows")
            print("   - PuTTY suite")
    
    print("\n5. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:")
    print("   - –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ .ppk –≤ OpenSSH —Ñ–æ—Ä–º–∞—Ç")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WSL —Å SSH")
    print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –ø–∞—Ä–æ–ª—é")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    available_tools = check_ssh_tools()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = check_config()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if config:
        test_connection(config)
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    suggest_fixes(available_tools, config)
    
    print("\n" + "=" * 50)
    print("üéØ –î–ª—è –¥–µ–ø–ª–æ—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python deploy.py")

if __name__ == "__main__":
    main() 