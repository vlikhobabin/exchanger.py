#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ Bitrix24 Custom Task Modifier
"""

import json
import os
import shutil
import sys
from pathlib import Path

def print_header():
    """–í—ã–≤–æ–¥–∏—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Bitrix24 Custom Task Modifier")
    print("=" * 50)

def check_config_exists():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    config_path = Path(__file__).parent.parent / "config.json"
    return config_path.exists()

def create_config_from_template():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —à–∞–±–ª–æ–Ω–∞"""
    template_path = Path(__file__).parent / "config.example.json"
    config_path = Path(__file__).parent.parent / "config.json"
    
    if not template_path.exists():
        print("‚ùå –§–∞–π–ª config.example.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        shutil.copy(template_path, config_path)
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª config.json –∏–∑ —à–∞–±–ª–æ–Ω–∞")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ config.json: {e}")
        return False

def get_user_input(prompt, default=None):
    """–ü–æ–ª—É—á–∞–µ—Ç –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if default:
        response = input(f"{prompt} [{default}]: ").strip()
        return response if response else default
    else:
        return input(f"{prompt}: ").strip()

def interactive_config():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîß –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("-" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_path = Path(__file__).parent.parent / "config.json"
    try:
        with open(config_path, 'r', encoding='utf-8') as f:
            config = json.load(f)
    except:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        return False
    
    print("\nüì° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞:")
    config['server']['host'] = get_user_input("IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞", config['server']['host'])
    config['server']['user'] = get_user_input("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", config['server']['user'])
    config['server']['path'] = get_user_input("–ü—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", config['server']['path'])
    
    print("\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    print("1. –ö–ª—é—á (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. –ü–∞—Ä–æ–ª—å")
    auth_choice = get_user_input("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏", "1")
    
    if auth_choice == "1":
        config['server']['auth_method'] = 'key'
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—É—Ç–∏
        username = os.environ.get('USERNAME', 'user')
        default_key_path = f"C:/Users/{username}/.ssh/privete-key.ppk"
        
        config['server']['key_file'] = get_user_input("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–ª—é—á–∞", default_key_path)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –∫–ª—é—á–∞
        if not Path(config['server']['key_file']).exists():
            print(f"‚ö†Ô∏è  –§–∞–π–ª –∫–ª—é—á–∞ {config['server']['key_file']} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("   –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∫–ª—é—á–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ!")
    else:
        config['server']['auth_method'] = 'password'
        if 'key_file' in config['server']:
            del config['server']['key_file']
    
    print("\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª–µ–π Bitrix24:")
    print("–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ ID –ø–æ–ª–µ–π, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥")
    
    update_fields = get_user_input("–û–±–Ω–æ–≤–∏—Ç—å ID –ø–æ–ª–µ–π? (y/n)", "n").lower()
    if update_fields == 'y':
        yes_id = get_user_input("ID –¥–ª—è '–î–ê'", str(config['bitrix_field_config']['UF_RESULT_ANSWER']['values']['yes']))
        no_id = get_user_input("ID –¥–ª—è '–ù–ï–¢'", str(config['bitrix_field_config']['UF_RESULT_ANSWER']['values']['no']))
        
        config['bitrix_field_config']['UF_RESULT_ANSWER']['values']['yes'] = int(yes_id)
        config['bitrix_field_config']['UF_RESULT_ANSWER']['values']['no'] = int(no_id)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(config, f, indent=4, ensure_ascii=False)
        print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_key_security():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞"""
    print("\nüõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ –∫–ª—é—á–µ–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = Path(__file__).parent
    key_files = list(project_dir.glob("*.ppk")) + list(project_dir.glob("*.pem")) + list(project_dir.glob("id_*"))
    
    if key_files:
        print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∫–ª—é—á–µ–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:")
        for key_file in key_files:
            print(f"   - {key_file.name}")
        
        print("\nüî¥ –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞!")
        print("   –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ~/.ssh/)")
        
        return False
    else:
        print("‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        return True

def run_diagnostics():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"""
    print("\nüîç –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    print("-" * 40)
    
    try:
        import subprocess
        result = subprocess.run([sys.executable, "check_auth.py"], 
                              capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ")
            print(result.stdout)
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print_header()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not check_config_exists():
        print("üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        if not create_config_from_template():
            return 1
    else:
        print("üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    if not interactive_config():
        return 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    check_key_security()
    
    # –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if not run_diagnostics():
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python check_auth.py' –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    
    print("\n" + "=" * 50)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª –∫–ª—é—á–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python check_auth.py' –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python quick_deploy.py' –¥–ª—è –¥–µ–ø–ª–æ—è")
    print("4. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å SECURITY.md –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 