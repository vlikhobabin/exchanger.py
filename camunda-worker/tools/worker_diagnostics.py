#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Universal Camunda Worker
"""

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ sys.path –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
import os
import sys
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from config import camunda_config, routing_config

def check_topics():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–ø–∏–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    topics = list(routing_config.TOPIC_TO_SYSTEM_MAPPING.keys())
    
    print(f"üìã –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –¢–û–ü–ò–ö–û–í:")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–ø–∏–∫–æ–≤: {len(topics)}")
    
    # –ü–æ–∏—Å–∫ bitrix —Ç–æ–ø–∏–∫–æ–≤
    bitrix_topics = [topic for topic in topics if 'bitrix' in topic.lower()]
    print(f"   Bitrix —Ç–æ–ø–∏–∫–∏: {len(bitrix_topics)}")
    for topic in bitrix_topics:
        print(f"     - {topic}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–ø–∏–∫–∞
    if 'bitrix_create_task' in topics:
        print(f"   ‚úÖ bitrix_create_task –ù–ê–ô–î–ï–ù –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        system = routing_config.get_system_for_topic('bitrix_create_task')
        print(f"   üéØ –°–∏—Å—Ç–µ–º–∞: {system}")
    else:
        print(f"   ‚ùå bitrix_create_task –ù–ï –ù–ê–ô–î–ï–ù –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    
    return 'bitrix_create_task' in topics

def check_worker_config():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Worker"""
    print(f"\nüîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø WORKER:")
    print(f"   Worker ID: {camunda_config.worker_id}")
    print(f"   Base URL: {camunda_config.base_url}")
    print(f"   Max Tasks: {camunda_config.max_tasks}")
    print(f"   Lock Duration: {camunda_config.lock_duration}")
    print(f"   Sorting: {repr(camunda_config.sorting)}")
    print(f"   Auth Enabled: {camunda_config.auth_enabled}")
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if camunda_config.max_tasks == 1:
        print(f"   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: maxTasks = 1 - Worker –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞—á—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!")
    elif camunda_config.max_tasks < 5:
        print(f"   ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: maxTasks = {camunda_config.max_tasks} - –≤–æ–∑–º–æ–∂–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê UNIVERSAL CAMUNDA WORKER")
    print("=" * 50)
    
    topic_ok = check_topics()
    check_worker_config()
    
    print(f"\nüìä –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    if topic_ok:
        print(f"   ‚úÖ Worker –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å bitrix_create_task")
        if camunda_config.max_tasks == 1:
            print(f"   ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞: Worker –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 –∑–∞–¥–∞—á—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
            print(f"   üí° –†–µ—à–µ–Ω–∏–µ: –£–≤–µ–ª–∏—á–∏—Ç—å CAMUNDA_MAX_TASKS –≤ .env –¥–æ 5-10")
        else:
            print(f"   üéØ Worker –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print(f"   ‚ùå Worker –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ bitrix_create_task")

if __name__ == "__main__":
    main() 